#!/usr/bin/env python
import os
import subprocess
import argparse
from iScore.graphrank.graph import iscore_graph
from iScore.graphrank.kernel import iscore_kernel
from iScore.graphrank.rank import iscore_svm

##########################################################################
# Predict the class of the graphs located by default in ./graph
# using the trained model stored in the archive file training_set.tar.gz
#########################################################################

# parse arguments
parser = argparse.ArgumentParser(description=' iScore - Predict the class of new conformations')

# where the kernels are stored
parser.add_argument('--kernel',default='./kernel/',type=str,help='Kernel pickle file to use')

# where the graphs are stored
parser.add_argument('--graph',default='./graph/',type=str,help='Graph pickle file to use')

# archive model to use
parser.add_argument('--archive',default='training_set.tar.gz',help='model archive we want to use')

# get the args
args = parser.parse_args()


# create the graphs
if not os.path.isdir(args.graph):
	os.mkdir(args.graph)
iscore_graph(outdir=args.graph)


# compute the kernels
if not os.path.isdir(args.kernel):
	os.mkdir(args.kernel)
kfile = os.path.join(args.kernel,'kernel.pckl')
iscore_kernel(test_graph=args.graph,train_archive=args.archive,outfile=kfile)


# predcit the classes
iscore_svm(load_model=None,package_name=args.archive)


